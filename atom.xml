<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Toger Blog]]></title>
  <link href="http://site.toger.us/atom.xml" rel="self"/>
  <link href="http://site.toger.us/"/>
  <updated>2018-09-18T07:00:37-07:00</updated>
  <id>http://site.toger.us/</id>
  <author>
    <name><![CDATA[Jason Martin jhmartin@toger.us]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DNS as a Service Discovery Load Balancer]]></title>
    <link href="http://site.toger.us/blog/2018/08/19/dns-as-a-load-balancer/"/>
    <updated>2018-08-19T13:38:22-07:00</updated>
    <id>http://site.toger.us/blog/2018/08/19/dns-as-a-load-balancer</id>
    <content type="html"><![CDATA[<p>DNS makes for a deceptively easy service-discovery platform. Various platforms (such as  <a href="https://docs.docker.com/network/overlay/">Docker swarm</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/overview-service-discovery.html">Amazon Auto-Naming</a> purport to provide a trivial to use service discovery mechanism. DNS is handled in most applications, so has the allure of working with legacy applications with zero integration work. Contrast DNS with purpose-built service discovery mechanisms such as <a href="https://technologyconversations.com/2015/09/08/service-discovery-zookeeper-vs-etcd-vs-consul/">Consul, Zookeeper, and Etcd</a> or <a href="https://github.com/Netflix/eureka">Netflix Eureka</a>. These tools require additional effort on the part of developers to integrate, but the result is much more robust. I tested several platforms below as to how they handle DNS round-robin loadbalancing.</p>

<!-- more -->


<p></p>

<p>DNS falls into the trap of being <em>too</em> easy to use. In this respects, DNS fails the <a href="https://en.wikipedia.org/wiki/Duck_test">Duck test</a> for service discovery. That is to say, while it walks and talks like a duck, it is not actually a duck.  Everyone &lsquo;knows&rsquo; DNS &mdash; every URL handling library is already capeable of handling DNS, so developers do not have to address discovery, or system integrators do not have to think about how to shim apps together.  The trap is a vicious badger masquerading as a duck. While all URL libraries handle DNS, they are not robust enough to replace the behavior of a full-fledged SD such as Consul. (I&rsquo;ll speak mostly to Consul as I am familiar with it, but this is not to say its competitor are insufficient). The DNS resolution libraries within various platforms differ significantly in behavior, causing sub-optimal application behavior. At small scale this is not an issue &mdash; all of them can competently resolve a name to a single address and connect.  They differ more when the resolution changes or returns multiple values.</p>

<p>Take for example Java &mdash; its poor DNS caching behavior is <a href="http://mattryall.net/blog/2005/03/javas-awful-dns-caching">well</a> <a href="https://stackoverflow.com/questions/1256556/any-way-to-make-java-honor-the-dns-caching-timeout-ttl">documented</a> and still requires <a href="https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/java-dg-jvm-ttl.html">configuration changes</a> to even remotely reasonably handle changes in DNS responses at runtime.  We&rsquo;ll look at the current behavior in more detail.</p>

<p>Imagine a client application that has a significant number of backends &mdash; 1:100 in the test case used here. Obviously, one backend cannot handle all of the load generated by the frontend, so the ideal behavior is for the traffic to be spread across the backends evenly.  This test examined the behavior of several popular business application languages and how they handled DNS resolution.</p>

<p>Integrating a full-fledged SD system allows the developer to get the up-to-the-second state of the environment (such as when performing Consul long-polls), forces them to consider how they want to splay requests across the possible backends, and how to react to changes in the topology. Applications that do not want to perform this level of integration can take advantage of shim mechanisms such as <a href="https://www.consul.io/intro/getting-started/connect.html">Consul Connect</a>, <a href="https://github.com/fabiolb/fabio">FabioLB</a>, or external dynamic loadbalancers such as <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/introduction.html">Amazon ALB</a>. While ALBs still utilize DNS, DNS for ALBs changes at a more &lsquo;normal&rsquo; DNS pace, and a given node&rsquo;s capacity is such that it is unlikely a single client can cause an overload.</p>

<h2>Test setup</h2>

<ul>
<li>Single-node Docker Swarm on a CentOS 7.5.1804 VM, running Docker 18.06.0-ce</li>
<li>100 <a href="https://github.com/jhmartin/iptest-nginx">Nginx</a> containers each configured to return their own ip address for <code>/</code>.</li>
<li>Client images, each performing 10,000 requests first naively then with a connection pool.

<ul>
<li><a href="https://github.com/jhmartin/iptest-ruby">Ruby</a></li>
<li><a href="https://github.com/jhmartin/iptest-python">Python</a></li>
<li><a href="https://github.com/jhmartin/iptest-ruby">Ruby</a></li>
<li><a href="https://github.com/jhmartin/iptest-java">Java</a></li>
<li><a href="https://github.com/jhmartin/iptest-php">PHP</a></li>
</ul>
</li>
</ul>


<p>See the <a href="https://gist.github.com/jhmartin/3a0de7d705eed4b670146c60dfccdb3e">Docker stack definition</a></p>

<div><script src='https://gist.github.com/3a0de7d705eed4b670146c60dfccdb3e.js?file=docker-compose.yml'></script>
<noscript><pre><code>version: &quot;3.2&quot;
networks:
  net1:

services:
  nginx:
    # replace username/repo:tag with your name and image details
    image: jhmartin/iptest-nginx:latest
    deploy:
      endpoint_mode: dnsrr
      replicas: 100
      restart_policy:
        condition: on-failure
    networks:
      net1:
       aliases:
         - ip
  ruby:
    # replace username/repo:tag with your name and image details
    image: jhmartin/iptest-ruby:latest
    depends_on:
      - nginx
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    networks:
      - net1
  node:
    # replace username/repo:tag with your name and image details
    image: jhmartin/iptest-node:latest
    depends_on:
      - nginx
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    networks:
      - net1
  python:
    # replace username/repo:tag with your name and image details
    image: jhmartin/iptest-python:latest
    depends_on:
      - nginx
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    networks:
      - net1
  java:
    # replace username/repo:tag with your name and image details
    image: jhmartin/iptest-java:latest
    depends_on:
      - nginx
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    networks:
      - net1
  php:
    # replace username/repo:tag with your name and image details
    image: jhmartin/iptest-php:latest
    depends_on:
      - nginx
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    networks:
      - net1</code></pre></noscript></div>


<p>Docker swarm is configured in <code>endpoint_mode: dnsrr</code> mode such that DNS resolution of the nginx service returns 100 <code>A</code> records. Each application first users the generic URL request library to query nginx 10,000 times and outputs the result (the server ip address) each time. The next batch attempts to use the platform specific connection-pool mechanism, as employing persistent connections is a very frequent optimization for http-heavy applications. The results were filtered and the resulting ip addresses run through a ruby script to map them to a x/y array:</p>

<div><script src='https://gist.github.com/3a0de7d705eed4b670146c60dfccdb3e.js?file=createpoints.rb'></script>
<noscript><pre><code>#!/usr/bin/env ruby

# Input is an ip address. Map it to a position in a list.
positioncount=0
linecount=0
indexes=Hash.new

STDIN.read.split(&quot;\n&quot;).each do |a|
   a=a.chomp
   if (! indexes.has_key?(a))
     indexes[a]=positioncount
     positioncount += 1
  end

  puts &quot;#{linecount}\t#{indexes[a]}\n&quot;
  linecount += 1
end
</code></pre></noscript></div>


<p>The client service logs were filtered into distinct files and transformed with <code>createpoints.rb</code> then passed through <a href="http://gnuplot.info/">gnuplot</a>:</p>

<div><script src='https://gist.github.com/3a0de7d705eed4b670146c60dfccdb3e.js?file=gnuplot.script'></script>
<noscript><pre><code>set term png

set title &quot;Ruby Simple LB&quot;
plot &quot;ruby.SIMPLE.dat&quot;

set output &quot;ruby.persist.png
plot &quot;ruby.PERSIST.dat&quot;

set output &quot;python.simple.png&quot;
plot &quot;python.SIMPLE.dat&quot;

set output &quot;python.persist.png&quot;
plot &quot;python.PERSIST.dat&quot;

set output &quot;java.simple.png&quot;
plot &quot;java.SIMPLE.dat&quot;

set output &quot;java.persist.png&quot;
plot &quot;java.PERSIST.dat&quot;

set output &quot;php.simple.png&quot;
plot &quot;php.SIMPLE.dat&quot;

set output &quot;php.persist.png&quot;
plot &quot;php.PERSIST.dat&quot;

set output &quot;node.simple.png&quot;
plot &quot;node.SIMPLE.dat&quot;

set output &quot;node.persist.png&quot;
plot &quot;node.PERSIST.dat&quot;
</code></pre></noscript></div>


<h2>Results</h2>

<p>The ideal result is a uniformlly distributed graph such that backend requests are splayed across available nodes.</p>

<p>Java Simple LB:<br/>
<img src="http://site.toger.us/images/iptest/java.simple.png" width="240" height="160" title="Java Simple LB" ></p>

<p>While not included here, setting the DNS cache to 0 resulted in all requests targeting one backend at a time, rotating every second.</p>

<p>Java Persistent LB:<br/>
<img src="http://site.toger.us/images/iptest/java.persist.png" width="240" height="160" title="Java Persistent LB" ></p>

<p>NodeJS Simple LB:<br/>
<img src="http://site.toger.us/images/iptest/node.simple.png" width="240" height="160" title="NodeJS Simple LB" ></p>

<p>Great distribution here.</p>

<p>NodeJS Persistent LB:<br/>
<img src="http://site.toger.us/images/iptest/node.persist.png" width="240" height="160" title="NodeJS Persistent LB" ></p>

<p>Node w/connection pooling generally selects one backend for a short period and sends all traffic to it.</p>

<p>PHP Simple LB:<br/>
<img src="http://site.toger.us/images/iptest/php.simple.png" width="240" height="160" title="PHP Simple LB" ></p>

<p>PHP Persistent LB:<br/>
<img src="http://site.toger.us/images/iptest/php.persist.png" width="240" height="160" title="PHP Persistent LB" ></p>

<p>Python Simple LB:<br/>
<img src="http://site.toger.us/images/iptest/python.simple.png" width="240" height="160" title="Python Simple LB" ></p>

<p>Python Persistent LB:<br/>
<img src="http://site.toger.us/images/iptest/python.persist.png" width="240" height="160" title="Python Persistent LB" ></p>

<p>Ruby Simple LB:<br/>
<img src="http://site.toger.us/images/iptest/ruby.simple.png" width="240" height="160" title="Ruby Simple LB" ></p>

<p>Rubt Persistent LB:<br/>
<img src="http://site.toger.us/images/iptest/ruby.persist.png" width="240" height="160" title="Ruby Persistent LB" ></p>

<h2>Conclusion</h2>

<p>Platform DNS behavior varies widely, and behaves poorly in a service-discovery environment unless specific care is taken.  DNS is normally not something a developer is concerned with, so in my opinion is likely to be overlooked.  A proper loadbalancer or service discovery integration is going to be more successful in the long run and avoid unexpected DNS pitfalls.</p>

<p>If I&rsquo;ve missed something in how the client apps should behave, please submit a PR to the appropriate application repo and I&rsquo;ll integrate the changes into this post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Home Automation Ideas]]></title>
    <link href="http://site.toger.us/blog/2017/09/24/home-automation-ideas/"/>
    <updated>2017-09-24T15:25:21-07:00</updated>
    <id>http://site.toger.us/blog/2017/09/24/home-automation-ideas</id>
    <content type="html"><![CDATA[<p>My house has a bevy of Z-Wave devices, plus a few LiFX bulbs. This has allowed for some fairly fun automations:</p>

<ul>
<li><p>When the garage door opens, a tilt sensor attached to the door turns the external bulbs on to bright-white, and activates the garage internal lights.  The outside lights revert to normal &lsquo;dim 2700K&rsquo; after 3 minutes, and the garage lights goes off after about 10 minutes.</p></li>
<li><p>A chime sounds upstairs whenever an exterior door is opened.</p></li>
<li><p>The exterior lights come on at &lsquo;civil twilight&rsquo; and extinguish at &lsquo;civil dawn&rsquo;</p></li>
<li><p>The exterior doors lock whenever the garage door closes. No more &lsquo;Did I lock the front door?&rsquo; doubts.</p></li>
<li><p>The exterior doors lock at a certain time each night.</p></li>
<li><p>The kids&#8217; room and desk lamps turn off at midnight.  Sometimes they get up after bedtime and &lsquo;play&rsquo; then fall asleep.</p></li>
<li><p>The bathroom and downstairs hallway lights turn on concurrent with my morning alarm. It is much easier to get up and walk into a lit room then in pitch black.</p></li>
<li><p>Telling Alexa to &lsquo;tell my house its bedtime&rsquo; locks all exterior doors, turns off all lights not in the kids rooms, turns on the stairway and master bath lights, then turns off the stairs light in 5 minutes.</p></li>
<li><p>Alexa can be instructed to turn on or off any or all of the downstairs lights; individually or collectively.</p></li>
<li><p>The Roku in the master bedroom, which inexplicibly has an audible fan, turns off at midnight.</p></li>
<li><p>The outlet adjacent to the master bedroom turns off at 4am.  This used to control a window fan with the goal of pulling in cool air at night but turning off before anyone gets up to avoid blasting them with frigid air. This rule has been rendered moot with the installation of an AirScape whole-house fan.</p></li>
<li><p>The pantry and coat-closet lights turn off after 5 minutes.</p></li>
<li><p>A notification is sent each day during the summer when the exterior temperature crosses over the interior temperature, to either open or close the windows and to turn on the house fan.</p></li>
</ul>


<p>This is all accomplished with a combination of ZWave devices, a Zwave.me Razberry Pi, a few LiFX bulbs, Amazon Echo, and AirScape fan w/2nd gen controls.</p>

<p>Home automation can be quite addicting &mdash; its impossible to install just one device!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkinsfile and Github Hooks]]></title>
    <link href="http://site.toger.us/blog/2017/06/17/jenkins-and-github-hooks/"/>
    <updated>2017-06-17T14:58:34-07:00</updated>
    <id>http://site.toger.us/blog/2017/06/17/jenkins-and-github-hooks</id>
    <content type="html"><![CDATA[<p>Jenkins is the juggernaut of the build pipeline ecosystem.  Its roots go back to bespoke local build pipelines and dedicated build engineers.  In present days the likes of CircleCI, CodeShip, Drone.io have started nipping at Jenkins heels.</p>

<p>One of the significant differences is that, historically, Jenkins builds are configured inside Jenkins. The contemporary alternatives generally favor a SCM-managed configuration file (often YAML format).  This is useful as it removes the specialness of the Golden Build Host (ever had someone corrupt a Jenkins configuration? Getting back to par is a pain).</p>

<p>Jenkins has joined the in-repo build configuration with their Jenkinsfile.  Unfortunately the documentation for this format is abysmal. Truly wretched.  The other day I was trying to make use of the Multibranch Workflow aka Pipelines function in Jenkins and attempted to get a Github-triggered build hook working. Hours of googling around to try to find what this should look like and I eventually stumbled across the sample below.  Having found it I&rsquo;ve further looked to see if there was any location in any sort of official documentation such that I should have been able to discern this as the correct answer, and come up empty.  I truly do not know how anyone makes all but the most trivial Jenkinsfile&rsquo;s function.</p>

<p>Having ranted about that, the resulting sample is:</p>

<figure class='code'><figcaption><span>Jenkinsfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">properties</span><span class="o">([</span>
</span><span class='line'>    <span class="n">pipelineTriggers</span><span class="o">([</span>
</span><span class='line'>      <span class="o">[</span><span class="n">$class</span><span class="o">:</span> <span class="s2">&quot;GitHubPushTrigger&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">])</span>
</span><span class='line'>  <span class="o">])</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">node</span><span class="o">(</span><span class="s1">&#39;docker&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">checkout</span> <span class="n">scm</span>
</span><span class='line'>
</span><span class='line'>  <span class="nf">stage</span><span class="o">(</span><span class="s1">&#39;Create Docker Image&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>   <span class="n">sh</span> <span class="s1">&#39;docker build -t dockerhub.example.com/example:latest .&#39;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS Route53 Failover and ALB]]></title>
    <link href="http://site.toger.us/blog/2017/04/20/aws-route53-failover-and-alb/"/>
    <updated>2017-04-20T08:51:25-07:00</updated>
    <id>http://site.toger.us/blog/2017/04/20/aws-route53-failover-and-alb</id>
    <content type="html"><![CDATA[<p>I ran across this little gotcha recently.</p>

<p>Scenario: A service hosted in two regions.  Each is fronted by either an ALB or ELB with an attached Autoscale group, that uses the LB healthcheck to determine instance health.  A Route53 configuration balances trafic between the two. Route53 &lsquo;Evaluate Target Health&rsquo; is set to yes and no healthcheck is attached.</p>

<p>Under the ELB, if the backend application fails in a region, the ELB will trigger termination of the application nodes.  Route53 will consider the region unhealthy if all the backends are sick or unregistered and fail over to the remaining region.</p>

<p>Under the ALB, the same occurs except Route53 does not consider an empty ALB as unhealthy and will continue to send traffic to a region with no registered backends.</p>

<p>This is to a certain extent understandable, as ALBs allow attaching multiple target groups and its not immediately obvious what to do when there is a mix of statuses. I suspect the common case is that most ALBs have exactly one target group attached though and that could be used as the status, or allow Route53 to be bound to a specific target group.</p>

<p>The current workaround is to use a Route53 Healthcheck (at an additional $1+ per month per check) to have Route53 perform an application healthcheck against each origin.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloud-Init With CentOS7, Chef, and SELinux]]></title>
    <link href="http://site.toger.us/blog/2016/06/08/cloud-init-with-centos7-and-chef/"/>
    <updated>2016-06-08T20:57:00-07:00</updated>
    <id>http://site.toger.us/blog/2016/06/08/cloud-init-with-centos7-and-chef</id>
    <content type="html"><![CDATA[<p>The CentOS 7 AMI in Amazon comes with Cloud-Init (<code>cloud-init-0.7.5-10.el7.centos.1.x86_64</code>). This is quite handy as it assists in automating several bootup tasks. One of these tasks is to install and bootstrap Chef.  Unforunately, when SELinux is installed the Chef handler will fail.</p>

<p>Sample error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[CLOUDINIT] util.py[DEBUG]: Restoring selinux mode for /var/lib (recursive=True)
</span><span class='line'>[CLOUDINIT] util.py[DEBUG]: Running chef (&lt;module 'cloudinit.config.cc_chef' from '/usr/lib/python2.7/site-packages/cloudinit/config/cc_chef.py'&gt;) failed
</span><span class='line'>       Traceback (most recent call last):
</span><span class='line'>         File "/usr/lib/python2.7/site-packages/cloudinit/stages.py", line 658, in _run_modules
</span><span class='line'>           cc.run(run_name, mod.handle, func_args, freq=freq)
</span><span class='line'>         File "/usr/lib/python2.7/site-packages/cloudinit/cloud.py", line 63, in run
</span><span class='line'>           return self._runners.run(name, functor, args, freq, clear_on_fail)
</span><span class='line'>         File "/usr/lib/python2.7/site-packages/cloudinit/helpers.py", line 197, in run
</span><span class='line'>           results = functor(*args)
</span><span class='line'>         File "/usr/lib/python2.7/site-packages/cloudinit/config/cc_chef.py", line 54, in handle
</span><span class='line'>           util.ensure_dir(d)
</span><span class='line'>         File "/usr/lib/python2.7/site-packages/cloudinit/util.py", line 1291, in ensure_dir
</span><span class='line'>           os.makedirs(path)
</span><span class='line'>         File "/usr/lib/python2.7/site-packages/cloudinit/util.py", line 167, in __exit__
</span><span class='line'>           self.selinux.restorecon(path, recursive=self.recursive)
</span><span class='line'>         File "/usr/lib64/python2.7/site-packages/selinux/__init__.py", line 95, in restorecon
</span><span class='line'>           for fname in fnames]), None)
</span><span class='line'>         File "/usr/lib64/python2.7/posixpath.py", line 246, in walk
</span><span class='line'>           walk(name, func, arg)
</span><span class='line'>         File "/usr/lib64/python2.7/posixpath.py", line 238, in walk
</span><span class='line'>           func(arg, top, names)
</span><span class='line'>         File "/usr/lib64/python2.7/site-packages/selinux/__init__.py", line 95, in &lt;lambda&gt;
</span><span class='line'>           for fname in fnames]), None)
</span><span class='line'>         File "/usr/lib64/python2.7/site-packages/selinux/__init__.py", line 85, in restorecon
</span><span class='line'>           status, context = matchpathcon(path, mode)
</span><span class='line'>       OSError: [Errno 2] No such file or directory</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>This proved to be most frustrating.  It was obviously failing while it was fixing the SELinux parameters under <code>/var/lib</code>, but it was not clear why.  There were no denied messages in the audit log. Of course <code>/var/lib</code> and <code>/var/lib/chef</code> existed. <code>/var/lib/chef</code> is a default directory listed in <code>/usr/lib/python2.7/site-packages/cloudinit/config/cc_chef.py</code>.</p>

<p>Adding in several debug statements led to determining that the issue was specific to <code>/var/lib/nfs/rpc_pipefs</code>. The file existed and had no special permissions, although it had a generic SELinux label as opposed to a nfs-specific value.  Further investigation showed that the root of the issue was in libselinux, which is looking up the intended label in <code>/etc/selinux/targeted/contexts/files/file_contents</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/usr/share/Modules/init(/.*)?   system_u:object_r:bin_t:s0
</span><span class='line'>/var/lib/nfs/rpc_pipefs(/.*)?   &lt;&lt;none&gt;&gt;</span></code></pre></td></tr></table></div></figure>


<p>The selinux python library is expecting a label as above, and returns a Errno 2 &lsquo;No such file or directory&rsquo; if it hits the &lsquo;none&rsquo; value.  This error is returned to cloud-init and causes the chef handler to bomb out.
Adding a label to the file_contents file works around the issue but likely breaks NFS (if it were in use). The better approach would be for <code>util.py</code> to ignore the case where a new label cannot be found. If CentOS7 updated to the latest cloud-init there is a decent chance this is fixed.</p>

<p>Filed as <a href="https://bugs.centos.org/view.php?id=10990.">https://bugs.centos.org/view.php?id=10990.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extending AWS Instance Trust]]></title>
    <link href="http://site.toger.us/blog/2016/06/05/extending-aws-instance-trust/"/>
    <updated>2016-06-05T20:39:53-07:00</updated>
    <id>http://site.toger.us/blog/2016/06/05/extending-aws-instance-trust</id>
    <content type="html"><![CDATA[<p>All nodes in EC2 can fetch their <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html">Instance Identity Documents</a>. This returns an AWS-signed block containing data about the instance that requested it.  This data is only available to the instance that fetched it, so if it turns around and presents it to some other service you can be confident it originated from the machine in question.</p>

<p>This is useful for secrets-enrollment processes where you want a node to be able to attest to its own identity in a secure fashion.  Your enrollment mechanism can ensure that the node is &lsquo;young&rsquo; enough to be making the request, and that the enrollment has never occured before.   Your enrollment tool can also look up other data about the instance (autoscale group, CloudFormation stack, etc) to determine what privileges it should be granted.</p>

<p>In this manner you can pivot on the security features AWS offers for identifying a particular node to another tool.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passing Host IP to ECS]]></title>
    <link href="http://site.toger.us/blog/2016/06/05/passing-host-ip-to-ecs/"/>
    <updated>2016-06-05T20:11:55-07:00</updated>
    <id>http://site.toger.us/blog/2016/06/05/passing-host-ip-to-ecs</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been looking for a way to run Consul &lsquo;standalone&rsquo; on a host and let multiple ECS containers connect to it.  I was hoping to find a macro I could put in a container definition but such does not yet exist.  Instead I realized that I can have my Docker instance query the <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html#instancedata-data-retrieval">instance metadata</a> service and get this information.  It is not quite as elegant docker-wise but it should work until something better comes along.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef Too Big for the Kitchen]]></title>
    <link href="http://site.toger.us/blog/2016/04/18/chef-too-big-for-the-kitchen/"/>
    <updated>2016-04-18T06:39:08-07:00</updated>
    <id>http://site.toger.us/blog/2016/04/18/chef-too-big-for-the-kitchen</id>
    <content type="html"><![CDATA[<p>While pondering running a full &lsquo;ride-the-wave&rsquo; auto-scaling solution in AWS, I looked closely at my Chef installation.  The environment is very Chef-heavy with fairly generic AMI that runs a slew of Chef recipes to bring it up to the needs of that particular role. The nodes are in Autoscale groups and get their role designation from the Launch Configuration.</p>

<p>On average a node invoked approximately 55 recipes (as recorded by seen_recipes in the audit cookbook).  Several of those recipes bring in resources from (authenticated) remote locations that have very good availability but are not in my direct control. Ignoring the remote-based recipes there is still a significant number of moving parts that can be disrupted unexpectedly, such as by other cookbook / role / KV store changes.  This is acceptable-if-not-ideal when nodes are generally brought into being under the supervision of an operator who can resolve any issues, or for when the odd 1-of-x00 pooled nodes dies and is automatically replaced. This risk is manageable when the environment is perpetually scaled for peak traffic.</p>

<p>However, when critical nodes are riding the wave of capacity then the chance that something will eventually break during scale-up and cause the &lsquo;wave&rsquo; to swamp the application becomes 100%. That requires an operator to adjust the problem under a significant time crunch as the application is overwhelmed by traffic &mdash; hardly a recipe for success.  The more likely scenario is breakage at some odd hour of the morning as users wake up, and the application fails before an operator can intervene to keep the application alive.</p>

<p>I looked at my Chef construction and realized it was less Infrastructure As Code (IaC) and more like Compile In Production (CIP).</p>

<!-- more -->


<p>IaC makes evokes the image that an application is manipulating infrastructure as though it were a reliable running probram, while CIP is more equivalent since it hits live repositories / pulls in dependencies that may need resolution at build time.  Running Chef based off of a generic AMI at machine provision time is akin to running maven build / maven install on each production machine as it is built. This is a slow and dangerous way to provision machines as any number of factors could prevent its success.  In development groups a build failure is significant but not a &lsquo;wake the VP&rsquo; level issue, unlike an application that cannot scale in time and fails.</p>

<p>With this in mind it is unfathomable to implement ride-the-wave on top of a lengthy Chef run.  It will eventually fail in a very messy and public manner.  Sound cookbook development and promotion practices can mitigate some of this, as can careful curation and mirroring of all external dependencies.  This impedes keeping up with security patches and diminishes the utility of community cookbooks that tend to fetch objects from canonical repositories.</p>

<p>Instead of Compile In Production, the standard development process of creating a build / deployable artifact should be followed, and in the same manner rely on minimal runtime configuration.  Tools like Packer and Docker (with a repo under my own control) go a long way towards this. In a Packer environment I have prebuilt AMIs. There is essentially nothing to fail at runtime. Similarly, in a Docker environment I need the full set of dependencies at build time and only a Docker repo at runtime.  A Docker repo is comparatively simple and much easier to monitor / control then of external dependencies.</p>

<p>With my provision-time dependencies narrowed done to essentially nothing or only a Docker repo, I can move forward with ride-the-wave capacity and still sleep at night not worrying about a random external failure causing my application to fail.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS ECS and Docker Exit (137)]]></title>
    <link href="http://site.toger.us/blog/2015/09/22/aws-ecs-and-docker-exit-137/"/>
    <updated>2015-09-22T19:19:40-07:00</updated>
    <id>http://site.toger.us/blog/2015/09/22/aws-ecs-and-docker-exit-137</id>
    <content type="html"><![CDATA[<p>I ran into this the other day, my ECS instances were dieing off and <code>docker ps</code> showed <code>Exited (137) About a minute ago</code>. Looking at <code>docker inspect</code> I noticed:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"State": {
</span><span class='line'> "FinishedAt": "2015-09-20T21:38:58.188768082Z",
</span><span class='line'>    "OOMKilled": true
</span><span class='line'>  },</span></code></pre></td></tr></table></div></figure>


<p>This tells me that ECS / Docker enforced the memory limit for the container, and the out-of-memory-killer killed off the contained processes.  Raising the ECS memory limit for this process resolved the issue.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Carl's Jr, SPF and AWS]]></title>
    <link href="http://site.toger.us/blog/2015/09/20/carl-jrs/"/>
    <updated>2015-09-20T20:34:01-07:00</updated>
    <id>http://site.toger.us/blog/2015/09/20/carl-jrs</id>
    <content type="html"><![CDATA[<p>Carl&rsquo;s Jr has a nifty nutritional calculator / order planner at <a href="http://www.carlsjr.com/menu/nutritional_calculator.">http://www.carlsjr.com/menu/nutritional_calculator.</a>  It lets you fully customize your meal, then lets you print or email your order to yourself with all the magic words to say to get your meal as planned (subbing cheese, extra / 2x / no onion, etc).</p>

<p>Tonight I used this to pre-assemble a highly customized meal for my family.  I triggered it to send me an email (easier to read on my phone at the order window) and anxiously awaited.</p>

<p>No email was received.</p>

<p>I host my own email and use <a href="http://rollernet.us">http://rollernet.us</a> for my public incoming MX relays; they are nifty as they have a ton of highly configurable anti-spam features that I can apply &lsquo;at the edge&rsquo; and lets my actual mailserver run much leaner since SpamAssassin et all are resource intensive.</p>

<p>Rollernet logs stated:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Connection from 54.236.226.113 rejected by mail.rollernet.us
</span><span class='line'>From: carlsjr@carlsjr.com
</span><span class='line'>To: my_email  
</span><span class='line'>Reason: SPF fail (Mechanism -all matched)</span></code></pre></td></tr></table></div></figure>


<p>Oh ho! I temporarily disabled SPF checking (and greylisting) and sent another meal through, and the email header said:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Received-SPF: fail (carlsjr.com: Sender is not authorized by default to use 'carlsjr@carlsjr.com' in 'mfrom' identity (mechanism '-all' matched)) receiver=mail2.rollernet.us; identity=mailfrom; envelope-from="carlsjr@carlsjr.com";
</span><span class='line'>        helo=ip-10-198-0-85.localdomain; client-ip=54.236.168.30</span></code></pre></td></tr></table></div></figure>


<p>I fetched their SPF record at with <a href="http://www.kitterman.com/spf/validate.html">http://www.kitterman.com/spf/validate.html</a> (though any DNS fetching tool would work) and received:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>v=spf1 ip4:63.168.109.0/24 ip4:67.203.173.0/26 ip4:216.87.35.224/27 mx include:spf.protection.outlook.com -all</span></code></pre></td></tr></table></div></figure>


<p>This tells me they use outlook.com for their internal email, and only allow a few subnets to originate mail from them &mdash; and the source IP I got was not one of them. 54.236.168.30 resolves to ec2-54-236-168-30.compute-1.amazonaws.com. www.carlsjr.com resolves to what appears to be a Cloudformation-based AWS environment:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ host www.carlsjr.com
</span><span class='line'>www.carlsjr.com is an alias for CKEMKTPRDLB-20130419-1810707626.us-east-1.elb.amazonaws.com.
</span><span class='line'>CKEMKTPRDLB-20130419-1810707626.us-east-1.elb.amazonaws.com has address 54.236.231.179
</span><span class='line'>CKEMKTPRDLB-20130419-1810707626.us-east-1.elb.amazonaws.com has address 52.1.95.39</span></code></pre></td></tr></table></div></figure>


<p>I suspect their Carl&rsquo;s AWS-based web farm is generating the outgoing mails directly, and they have not accounted for that in their SPF configuration. Using Amazon Simple Email Service (SPF) would have accounted for this already (<a href="http://docs.aws.amazon.com/ses/latest/DeveloperGuide/authenticate-domain.html">http://docs.aws.amazon.com/ses/latest/DeveloperGuide/authenticate-domain.html</a>). This could also be handled by designating a outgoing mail host from their AWS environment with an Elastic IP attached and add it to their SPF record.</p>

<p>I sent them an email detailing the issue at their corporate email address. I&rsquo;ll update if I hear back, but I don&rsquo;t expect it will ever reach anyone who knows what to do with it.</p>

<p>Update: I got an email back stating the issue was being routed &lsquo;to the appropriate department&rsquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Varnish Cache and req.backend.healthy]]></title>
    <link href="http://site.toger.us/blog/2015/06/27/varnish-cache-and-req-dot-backend-dot-healthy/"/>
    <updated>2015-06-27T15:39:50-07:00</updated>
    <id>http://site.toger.us/blog/2015/06/27/varnish-cache-and-req-dot-backend-dot-healthy</id>
    <content type="html"><![CDATA[<p>An odd issue I ran into the other day: I had a <a href="https://www.varnish-cache.org">Varnish 3</a> instance that had logic hinging on <code>req.backend.healthy</code> to show a special error page if all the backends were down. That logic inexpliciably triggered even though all my backends were up! After much head-scratching I identified the issue: one of my historical VCLs was still loaded that no longer had any healthy backends (due to repeated autoscaling up / down), and although the <em>current</em> definition of that director had healthy backends, the historical one did not.  Varnish has a habit of not letting go of old VCLs even if you specify <code>vcl.discard</code> on them.  So, <code>req.backend.healthy</code> will show the director as down if any prior definition of that director is down.  Since the only way to definitively remove VCLs from memory is a restart (which flushes the memory cache), this makes <code>req.backend.healthy</code> fairly unreliable.</p>

<p>This is in v3 and may not apply to v4 anymore.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2FA and Minecraft Server]]></title>
    <link href="http://site.toger.us/blog/2015/06/27/2fa-and-minecraft-server/"/>
    <updated>2015-06-27T14:57:41-07:00</updated>
    <id>http://site.toger.us/blog/2015/06/27/2fa-and-minecraft-server</id>
    <content type="html"><![CDATA[<p>Two Factor Authentication (2FA) is an additional layer of protection you can add to your Minecraft server. You should already be relying on SSH keys to access your server, but those keys can be lost or leaked if you use them on untrusted machines.  2FA protects you from hacks resulting from someone gaining access to your password or SSH key.</p>

<p><a href="http://DuoSecurity.com">DuoSecurity</a> is a company that provides a 2FA service that is free for personal use. A Mobile Push notification is sent via their Android / iOS app whenever a login is attempted and requires an affirmative response before login can proceed.  There is also SMS and computer-generated voice calls, but those consume credits that have a cost to refill. There is also a cost for going over 10 users, which should not be an issue for adminstation of a Minecraft server.</p>

<p>I performed a source install to get the latest version, there are also packages for RHEL/CentOS/Debian/Ubuntu on their website.</p>

<p>They offer a SSH-specific installation and a PAM installation that covers all auth on the machine. PAM is likely the more comprehensive solution but is a more involved process, plus requires a SELinux policy update (and the server resulting from this series has SELinux enabled). Their website tells you how to install the relevant SELinux policy but the necessary objects are missing from their download. I&rsquo;ve send them a mail and will update if I get clarification. For the record, the error I got was:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>make: Entering directory `/home/centos/duo_unix-1.9.14/pam_duo'
</span><span class='line'>checkmodule -M -m -o authlogin_duo.mod authlogin_duo.te
</span><span class='line'>checkmodule:  loading policy configuration from authlogin_duo.te
</span><span class='line'>checkmodule:  unable to open authlogin_duo.te
</span><span class='line'>make: [semodule] Error 1 (ignored)
</span><span class='line'>semodule_package -o authlogin_duo.pp -m authlogin_duo.mod
</span><span class='line'>semodule_package:  Could not open file No such file or directory:  authlogin_duo.mod
</span><span class='line'>make: [semodule] Error 1 (ignored)
</span><span class='line'>semodule -i authlogin_duo.pp
</span><span class='line'>semodule:  Failed on authlogin_duo.pp!
</span><span class='line'>make: [semodule] Error 1 (ignored)
</span><span class='line'>make: Leaving directory `/home/centos/duo_unix-1.9.14/pam_duo'</span></code></pre></td></tr></table></div></figure>


<p>SSH setup is straightforward. Install the DuoSecurity app on your mobile device. Create an account on their website. Navigate their portal and select Applications, then <code>+New Application</code>.  Give it name of Minecraft SSH. This will result in a window showing a Integration key, Secret key (requiring a click to show), and an API hostname. Collect those and store them to the side (securely!)</p>

<p><a href="https://www.duosecurity.com/docs/duounix#instructions">https://www.duosecurity.com/docs/duounix#instructions</a> describes the compile process:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget https://dl.duosecurity.com/duo_unix-latest.tar.gz
</span><span class='line'>tar zxf duo_unix-latest.tar.gz
</span><span class='line'><span class="nb">cd </span>duo_unix-1.9.14
</span><span class='line'>./configure --prefix<span class="o">=</span>/usr <span class="o">&amp;&amp;</span> make <span class="o">&amp;&amp;</span> sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>After installing the binaries, modify /etc/duo/login_duo.conf and fill in the ikey/skey/host values from above. Uncomment pushinfo as well so that more details about the login are sent to you.</p>

<p><a href="https://www.duosecurity.com/docs/duounix#centos">https://www.duosecurity.com/docs/duounix#centos</a> describes modifying SSH to work with the new system. <strong>Keep an alternate root-logged in session open in an alternate window</strong> while attempting this so you can back out if you make a mistake.  Do not log out of the &lsquo;backup&rsquo; window until you&rsquo;ve thoroughly exercised the system. I will not be responsible if you lock yourself out.</p>

<p>Add <code>ForceCommand /usr/sbin/login_duo</code> to the end of /etc/sshd/sshd_config, then restart sshd (which does not kick out existing sessions) with <code>systemctl restart sshd.service</code></p>

<p>Now attempt to log in to your account. You will be prompted to enroll in 2FA. Upon logging in again you will be prompted for your 2FA method, which will look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span> ssh minecraft.example.com -i ~/.ssh/minecraft.pem -l centos
</span><span class='line'>Duo two-factor login <span class="k">for </span>centos
</span><span class='line'>
</span><span class='line'>Enter a passcode or <span class="k">select </span>one of the following options:
</span><span class='line'>
</span><span class='line'> 1. Duo Push to XXX-XXX-1234
</span><span class='line'> 2. Phone call to XXX-XXX-1234
</span><span class='line'> 3. SMS passcodes to XXX-XXX-1234
</span></code></pre></td></tr></table></div></figure>


<p>I always choose #1 as I do not want to expend credits, though if push failed I could resort to the other two. When I choose #1 I get a popup on my phone asking me to accept / deny the login, and after choosing Accept I am able to log in.</p>

<p>Now I do not have to worry someone will get ahold of my minecraft.pem and gain access to the server. Further, if I get a login-request on my phone and haven&rsquo;t attemped to log in, I know my key has been compromised.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DSL Modem and Power Strips]]></title>
    <link href="http://site.toger.us/blog/2015/01/27/dsl-modem-and-power-strips/"/>
    <updated>2015-01-27T20:18:56-08:00</updated>
    <id>http://site.toger.us/blog/2015/01/27/dsl-modem-and-power-strips</id>
    <content type="html"><![CDATA[<p>I had cause to call CenturyLink support recently. As one of the troubleshooting steps they seriously claimed that a power strip is not capeable of providing sufficient power to a DSL modem, and that it <em>must</em> be connected directly to the wall to receive sufficient power.</p>

<p>I suspect this was to force me to unplug and powercycle the modem, but I had done that several times already.  The idea that a DSL modem draws more power than will flow through a power strip is ridiculous.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minecraft and Datadog Monitoring]]></title>
    <link href="http://site.toger.us/blog/2015/01/26/minecraft-and-datadog-monitoring/"/>
    <updated>2015-01-26T16:53:08-08:00</updated>
    <id>http://site.toger.us/blog/2015/01/26/minecraft-and-datadog-monitoring</id>
    <content type="html"><![CDATA[<p><a href="http://www.datadoghq.com">DataDog</a> is a nifty monitoring / statistics gathering system. It is something like a akin to a combination of Graphite / Grafana, but with a social aspect so that your team can attach discussions to a given point in time. They have a free tier that retains data for a day, which is handy for visualizing the state of the Minecraft server.</p>

<p>Java applications normally expose their statistics via JMX.  I did not see anything Minecraft-specific in my stock instance, but Java itself exposes several counters that are informative.</p>

<p>I created my Datadog account, procured my API key, and installed the agent with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">DD_API_KEY</span><span class="o">=</span>MyAPIKey  bash -c <span class="s2">&quot;$(curl -L https://raw.githubusercontent.com/DataDog/dd-agent/master/packaging/datadog-agent/source/install_agent.sh)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>JMX is not enabled by default for Java processes, so I updated my systemd unit file in <code>/etc/systemd/system/minecraft.service</code> to include the JMX configuration:</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[Unit]</span>
</span><span class='line'><span class="na">Description</span><span class="o">=</span><span class="s">Daemon to detect crashing apps</span>
</span><span class='line'><span class="na">After</span><span class="o">=</span><span class="s">syslog.target</span>
</span><span class='line'><span class="na">RequiresMountsFor</span><span class="o">=</span><span class="s">/minecraft</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Service]</span>
</span><span class='line'><span class="na">ExecStart</span><span class="o">=</span><span class="s">/bin/java -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -javaagent:../newrelic/newrelic.jar -Xmx1024M -Xms1024M -jar /minecraft/bin/minecraft_server.jar nogui</span>
</span><span class='line'><span class="na">WorkingDirectory</span><span class="o">=</span><span class="s">/minecraft/var</span>
</span><span class='line'><span class="na">User</span><span class="o">=</span><span class="s">minecraft</span>
</span><span class='line'><span class="na">Group</span><span class="o">=</span><span class="s">minecraft</span>
</span><span class='line'><span class="na">PrivateTmp</span><span class="o">=</span><span class="s">true</span>
</span><span class='line'><span class="na">NoNewPrivileges</span><span class="o">=</span><span class="s">true</span>
</span><span class='line'><span class="na">InaccessibleDirectories</span><span class="o">=</span><span class="s">/home</span>
</span><span class='line'><span class="na">ReadOnlyDirectories</span><span class="o">=</span><span class="s">/bin /lib /usr /etc /</span>
</span><span class='line'><span class="na">ReadWriteDirectories</span><span class="o">=</span><span class="s">/minecraft/var</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Install]</span>
</span><span class='line'><span class="na">WantedBy</span><span class="o">=</span><span class="s">multi-user.target</span>
</span></code></pre></td></tr></table></div></figure>


<p>This opens JMX on port 9010 and allows remote access, though I don&rsquo;t need it for this. My AWS security group will prevent any other machines from accessing jmx.  I may come back to this later and implement authentication.</p>

<p>Datadog stores its java configuration in <code>/etc/dd-agent/conf.d/jmx.conf</code>, so I added the list of counters to store:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">init_config</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="l-Scalar-Plain">conf</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">include</span><span class="p-Indicator">:</span>
</span><span class='line'>                <span class="l-Scalar-Plain">domain</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang</span>
</span><span class='line'>                <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">MemoryPool</span>
</span><span class='line'>            <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">include</span><span class="p-Indicator">:</span>
</span><span class='line'>                <span class="l-Scalar-Plain">domain</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang</span>
</span><span class='line'>                <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Threading</span>
</span><span class='line'>            <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">include</span><span class="p-Indicator">:</span>
</span><span class='line'>                <span class="l-Scalar-Plain">domain</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang</span>
</span><span class='line'>                <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">GarbageCollector</span>
</span><span class='line'>            <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">include</span><span class="p-Indicator">:</span>
</span><span class='line'>                <span class="l-Scalar-Plain">domain</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang</span>
</span><span class='line'>                <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Threading</span>
</span><span class='line'>            <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">include</span><span class="p-Indicator">:</span>
</span><span class='line'>                <span class="l-Scalar-Plain">domain</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.nio</span>
</span><span class='line'>                <span class="l-Scalar-Plain">type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">BufferPool</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">instances</span><span class="p-Indicator">:</span>
</span><span class='line'>     <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">localhost</span>
</span><span class='line'>       <span class="l-Scalar-Plain">port</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">9010</span>
</span></code></pre></td></tr></table></div></figure>


<p>The list of counters is available after the instance is configured in the yaml file by running <code>/etc/rc.d/init.d/datadog-agent jmx list_everything</code>:</p>

<p>The output looks like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=Compilation - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TotalCompilationTime  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=Compilation - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">CompilationTimeMonitoringSupported  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">boolean</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=Compilation - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Name  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang.String</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">OpenFileDescriptorCount  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">MaxFileDescriptorCount  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">CommittedVirtualMemorySize  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TotalSwapSpaceSize  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">FreeSwapSpaceSize  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ProcessCpuTime  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">FreePhysicalMemorySize  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">TotalPhysicalMemorySize  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">SystemCpuLoad  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">double</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ProcessCpuLoad  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">double</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Version  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang.String</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">AvailableProcessors  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">int</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">SystemLoadAverage  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">double</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Arch  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang.String</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Not Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=OperatingSystem - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Name  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang.String</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">4/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Usage  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">javax.management.openmbean.CompositeData</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">8/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">PeakUsage  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">javax.management.openmbean.CompositeData</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">9/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">UsageThreshold  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">10/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">UsageThresholdExceeded  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">boolean</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">11/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">UsageThresholdCount  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">12/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">UsageThresholdSupported  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">boolean</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">13/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">CollectionUsageThreshold  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">14/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">CollectionUsageThresholdExceeded  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">boolean</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">15/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">CollectionUsageThresholdCount  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">long</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">19/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">CollectionUsage  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">javax.management.openmbean.CompositeData</span>
</span><span class='line'>   <span class="l-Scalar-Plain">Matching</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">20/350. Bean name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">java.lang:type=MemoryPool,name=Perm Gen - Attribute name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">CollectionUsageThresholdSupported  - Attribute type</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">boolean</span>
</span></code></pre></td></tr></table></div></figure>


<p>The domain is the portion before the first : in the bean name.</p>

<p>The end result is some nice free graphs out of Datadog:
<img class="center" src="http://site.toger.us/images/datadog.png"></p>

<p>The graphs for host CPU usage, threads active and java memory utilization are most interesting.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minecraft and NewRelic]]></title>
    <link href="http://site.toger.us/blog/2015/01/16/minecraft-and-newrelic/"/>
    <updated>2015-01-16T20:27:21-08:00</updated>
    <id>http://site.toger.us/blog/2015/01/16/minecraft-and-newrelic</id>
    <content type="html"><![CDATA[<p><a href="http://www.newrelic.com">NewRelic</a> is an exceptionally useful tool for monitoring java applications, or at least those that deal with web or other transational workloads. I tried hooking it up to MineCraft and it doesn&rsquo;t report anything. The free version doesn&rsquo;t let me look at the JVM stats (threads and such) so it appears to be a waste. However, they also provide a general unix server agent that does provide some nifty dashboards. The procedure to install it is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rpm -Uvh https://yum.newrelic.com/pub/newrelic/el5/x86_64/newrelic-repo-5-3.noarch.rpm
</span><span class='line'>yum install newrelic-sysmond
</span><span class='line'>nrsysmond-config --set <span class="nv">license_key</span><span class="o">=</span>YourLicenseKey
</span><span class='line'>/etc/init.d/
</span></code></pre></td></tr></table></div></figure>


<p>The RPM is EL5-era so doesn&rsquo;t understand SystemD, so I created a unit file:</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[Unit]</span>
</span><span class='line'><span class="na">Description</span><span class="o">=</span><span class="s">NewRelic service</span>
</span><span class='line'><span class="na">After</span><span class="o">=</span><span class="s">syslog.target</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Service]</span>
</span><span class='line'><span class="na">ExecStart</span><span class="o">=</span><span class="s">/usr/sbin/nrsysmond -c /etc/newrelic/nrsysmond.cfg -f</span>
</span><span class='line'><span class="na">WorkingDirectory</span><span class="o">=</span><span class="s">/</span>
</span><span class='line'><span class="na">User</span><span class="o">=</span><span class="s">newrelic</span>
</span><span class='line'><span class="na">Group</span><span class="o">=</span><span class="s">newrelic</span>
</span><span class='line'><span class="na">PrivateTmp</span><span class="o">=</span><span class="s">true</span>
</span><span class='line'><span class="na">NoNewPrivileges</span><span class="o">=</span><span class="s">true</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Install]</span>
</span><span class='line'><span class="na">WantedBy</span><span class="o">=</span><span class="s">multi-user.target</span>
</span></code></pre></td></tr></table></div></figure>


<p>and installed it as /etc/systemd/system/newrelic.service, then:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>systemctl daemon-reload
</span><span class='line'>systemctl restart newrelic
</span><span class='line'>systemctl <span class="nb">enable </span>newrelic
</span></code></pre></td></tr></table></div></figure>


<p>NewRelic generates a pretty picture such as:
<img class="center" src="http://site.toger.us/images/newrelic.PNG"></p>

<p>However, NewRelic is not the only server/stats monitor in town so I&rsquo;ll check out some others another time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minecraft and SystemD]]></title>
    <link href="http://site.toger.us/blog/2015/01/11/minecraft-and-systemd/"/>
    <updated>2015-01-11T20:21:33-08:00</updated>
    <id>http://site.toger.us/blog/2015/01/11/minecraft-and-systemd</id>
    <content type="html"><![CDATA[<p>In the first installment I launched a basic Minecraft service on CentOS7. However, a proper service should not be run from the command line, instead it should be controlled by the system service daemon. In years past this would be by writing a &lsquo;sysV init script&rsquo; which would try to determine if the process was running, if not launch it and capture its PID for future reference, and capture its output to a file.  CentOS-7 has switched away from that model to one called SystemD which makes much of that easier.  There is some controversy over the SystemD model (is it UNIX-y? Too monolithic? Taking over everything?) but seems pretty handy for what it needs to do, plus has some nice security features.</p>

<p>So I will create a Minecraft service definition for SystemD. I used <a href="http://0pointer.de/blog/projects/systemd-for-admins-3.html">http://0pointer.de/blog/projects/systemd-for-admins-3.html</a> to help me with this. The unit file will look like:</p>

<!-- more -->


<p>/etc/systemd/system/minecraft.service:</p>

<figure class='code'><figcaption><span>/etc/systemd/system/minecraft.service</span><a href='https://github.com/jhmartin/minecraft-server-done-too-well/blob/master/systemd/minecraft.service'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[Unit]</span>
</span><span class='line'><span class="na">Description</span><span class="o">=</span><span class="s">Minecraft server</span>
</span><span class='line'><span class="na">After</span><span class="o">=</span><span class="s">syslog.target</span>
</span><span class='line'><span class="na">RequiresMountsFor</span><span class="o">=</span><span class="s">/minecraft</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Service]</span>
</span><span class='line'><span class="na">ExecStart</span><span class="o">=</span><span class="s">/bin/java -Xmx1024M -Xms1024M -jar /minecraft/bin/minecraft_server.jar nogui</span>
</span><span class='line'><span class="na">WorkingDirectory</span><span class="o">=</span><span class="s">/minecraft/var</span>
</span><span class='line'><span class="na">User</span><span class="o">=</span><span class="s">minecraft</span>
</span><span class='line'><span class="na">Group</span><span class="o">=</span><span class="s">minecraft</span>
</span><span class='line'><span class="na">PrivateTmp</span><span class="o">=</span><span class="s">true</span>
</span><span class='line'><span class="na">NoNewPrivileges</span><span class="o">=</span><span class="s">true</span>
</span><span class='line'><span class="na">InaccessibleDirectories</span><span class="o">=</span><span class="s">/home</span>
</span><span class='line'><span class="na">ReadOnlyDirectories</span><span class="o">=</span><span class="s">/bin /lib /usr /etc /</span>
</span><span class='line'><span class="na">ReadWriteDirectories</span><span class="o">=</span><span class="s">/minecraft</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Install]</span>
</span><span class='line'><span class="na">WantedBy</span><span class="o">=</span><span class="s">multi-user.target</span>
</span></code></pre></td></tr></table></div></figure>


<p>What this does:</p>

<ul>
<li>Defines the service name</li>
<li>Designates that it requires the /minecraft mount and should run after the logging daemon starts.</li>
<li>Provides the startup command, working directory, user/group</li>
<li>Designates that /tmp should be private for that process</li>
<li>Prevents the process from gaining any privileges.</li>
<li>Hides /home from the process</li>
<li>Makes most system directories read-only (to protect against accidental permissions issues)</li>
<li>Makes /minecraft read-writeable.</li>
</ul>


<p>The last few are for system protection &mdash; even if the java daemon is subverted to try to read the contents of /home, it can&rsquo;t see it.   Between the hidden and read-only directories, the limitation of privileges and the non-privileged launching user, there is much less chance of MineCraft causing system-wide havoc.</p>

<p>After putting the service defintion into place, reload systemd, restart the daemon and check its output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>systemctl daemon-reload
</span><span class='line'>systemctl restart minecraft.service
</span><span class='line'>systemctl <span class="nb">enable </span>minecraft.service
</span><span class='line'>journalctl -u minecraft.service
</span></code></pre></td></tr></table></div></figure>


<p>To stop the service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>systemctl stop minecraft.service
</span></code></pre></td></tr></table></div></figure>


<p>Output will be:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Jan 12 04:18:02 ip-10-10-0-239.ec2.internal systemd<span class="o">[</span>1<span class="o">]</span>: Starting Daemon to detect crashing apps...
</span><span class='line'>Jan 12 04:18:02 ip-10-10-0-239.ec2.internal systemd<span class="o">[</span>1<span class="o">]</span>: Started Daemon to detect crashing apps.
</span><span class='line'>Jan 12 04:18:06 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:06<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Starting minecraft server version 1.8.1
</span><span class='line'>Jan 12 04:18:06 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:06<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Loading properties
</span><span class='line'>Jan 12 04:18:06 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:06<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Default game <span class="nb">type</span>: SURVIVAL
</span><span class='line'>Jan 12 04:18:06 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:06<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Generating keypair
</span><span class='line'>Jan 12 04:18:06 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:06<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Starting Minecraft server on *:25565
</span><span class='line'>Jan 12 04:18:06 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:06<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Using epoll channel <span class="nb">type</span>
</span><span class='line'>Jan 12 04:18:06 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:06<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing level <span class="s2">&quot;world&quot;</span>
</span><span class='line'>Jan 12 04:18:06 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:06<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing start region <span class="k">for </span>level 0
</span><span class='line'>Jan 12 04:18:07 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:07<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing spawn area: 94%
</span><span class='line'>Jan 12 04:18:07 ip-10-10-0-239.ec2.internal java<span class="o">[</span>2198<span class="o">]</span>: <span class="o">[</span>04:18:07<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Done <span class="o">(</span>1.192s<span class="o">)</span>! For <span class="nb">help</span>, <span class="nb">type</span> <span class="s2">&quot;help&quot;</span> or <span class="s2">&quot;?&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Update: <a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#x3a;&#x64;&#105;&#101;&#116;&#114;&#105;&#x63;&#104;&#x40;&#x74;&#x65;&#x69;&#108;&#x67;&#101;&#100;&#97;&#x6e;&#107;&#101;&#x6e;&#46;&#x64;&#x65;">&#x64;&#105;&#x65;&#x74;&#x72;&#105;&#99;&#104;&#64;&#x74;&#x65;&#x69;&#x6c;&#103;&#x65;&#100;&#x61;&#110;&#x6b;&#101;&#x6e;&#46;&#100;&#101;</a> sent me a link to <a href="https://teilgedanken.de/Blog/post/8/">https://teilgedanken.de/Blog/post/8/</a> which takes this a step further and utilizes MCRCON to more gracefully control the servers shutdown state, and integrate with FirewallD if your system utilizes it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minecraft Server in AWS Done Too Well]]></title>
    <link href="http://site.toger.us/blog/2015/01/10/minecraft-server-in-aws-done-too-well/"/>
    <updated>2015-01-10T22:03:40-08:00</updated>
    <id>http://site.toger.us/blog/2015/01/10/minecraft-server-in-aws-done-too-well</id>
    <content type="html"><![CDATA[<h1>A new Server</h1>

<p>This series will go through how to host a MineCraft server, and go totally overboard on the configuration/management of it. I&rsquo;ll be integrating a variety of management/monitoring tools that go far beyond the needs of the average &lsquo;friends &amp; family&rsquo; server, because it is fun.  I&rsquo;ll starting the basics and build up from there.</p>

<p>So, first we need a machine. I&rsquo;m going to use a Amazon AWS machine for this.  I&rsquo;ll be using some AWS-specific features, but I don&rsquo;t think any of them will be critical.  In some cases I&rsquo;ll show the non-AWS alternative.</p>

<!-- more -->


<ul>
<li>Go the the EC2 Portal and the IAM service and select Roles. Create a role named app-minecraft. The type should be EC2, and choose No Permissions (for now). We&rsquo;ll be using this later to allow the node to make backups of itself.</li>
<li>We&rsquo;ll create a CentOS 7 machine on AWS. Visit <a href="https://aws.amazon.com/marketplace/pp/B00O7WM7QW">https://aws.amazon.com/marketplace/pp/B00O7WM7QW</a> and select Continue. CentOS is a free Linux distribution so you&rsquo;re only paying for AWS time, not the software.</li>
<li>Select Launch with EC2 Console for US-EAST</li>
<li>Choose <code>t2.medium</code> (for now) and select Configure Instance Details. Choose app-minecraft for the IAM role.</li>
<li>Enable &lsquo;Protect against accidental termination&rsquo;, and choose Add Storage.</li>
<li>Make the root device 15 GB and add an additional EBS volume at 20GB.  This is being done to protect the OS Select Delete On Termination for both. Select Tag Instance.</li>
<li>Set the name to &lsquo;Minecraft Server #1&rsquo;. select Configure Security Group.</li>
<li>Select Create a New Security Group. Call it sgMinecraft and allow All Traffic from &lsquo;My Ip&rsquo;. Choose Review and Launch.</li>
<li>You&rsquo;ll be prompted to ensure you have access to your SSH keys and then choose Launch.</li>
<li>Connect to your new instance with SSH at centos@YOURIP.</li>
<li>First thing is to update the host and reboot:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum update -y<span class="p">;</span> sudo shutdown -r now
</span></code></pre></td></tr></table></div></figure>


<p>You&rsquo;ll get disconnected, wait a few minutes and reconnect.</p>

<ul>
<li>Install java and wget:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install -y java-1.7.0 wget
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Format the 2nd drive.  AWS says it mounted the drive on /dev/sdb which means it ended up on /dev/xvdb. Lets format and mount it:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkfs.xfs /dev/xvdb
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Find out the device UUID. This is useful as you might move drives around and want reliable device mounting:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo xfs_admin -u /dev/xvdb
</span><span class='line'><span class="nv">UUID</span> <span class="o">=</span> 3a8921a8-1fa5-4a4d-aca9-9d46a6e83418
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create the mountpoint for MineCraft:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir /minecraft
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Modify /etc/fstab:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo vi /etc/fstab
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Add the following (use your new UUID):</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">UUID</span><span class="o">=</span>3a8921a8-1fa5-4a4d-aca9-9d46a6e83418 /minecraft xfs     defaults        1 1
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Save the file, and mount the drive</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mount /minecraft
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create a Minecraft user and proceed as that user:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>useradd -d /minecraft minecraft
</span><span class='line'>chown -Rh minecraft:minecraft /minecraft
</span><span class='line'>sudo su - minecraft
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create /minecraft/bin and download MineCraft to it.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir /minecraft/bin /minecraft/log /minecraft/var
</span><span class='line'>wget https://s3.amazonaws.com/Minecraft.Download/versions/1.8.1/minecraft_server.1.8.1.jar -O /minecraft/bin/minecraft_server.jar
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Perform a trial-launch of the server:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /minecraft/var
</span><span class='line'>ln -s ../logs .
</span><span class='line'><span class="c"># Assuming you have read the Minecraft EULA at https://account.mojang.com/documents/minecraft_eula</span>
</span><span class='line'><span class="nb">echo </span><span class="nv">eula</span><span class="o">=</span><span class="nb">true</span> &gt;eula.txt
</span><span class='line'>java -Xmx1024M -Xms1024M -jar /minecraft/bin/minecraft_server.jar nogui
</span></code></pre></td></tr></table></div></figure>


<p>You will get some output indicating certain files were not found. That is OK as the server is generating them for you:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Starting minecraft server version 1.8.1
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Loading properties
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/WARN<span class="o">]</span>: server.properties does not exist
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Generating new properties file
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Default game <span class="nb">type</span>: SURVIVAL
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Generating keypair
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Starting Minecraft server on *:25565
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Using epoll channel <span class="nb">type</span>
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/WARN<span class="o">]</span>: Failed to load user banlist:
</span><span class='line'>java.io.FileNotFoundException: banned-players.json <span class="o">(</span>No such file or directory<span class="o">)</span>
</span><span class='line'>        at java.io.FileInputStream.open<span class="o">(</span>Native Method<span class="o">)</span> ~<span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'>        at java.io.FileInputStream.&lt;init&gt;<span class="o">(</span>FileInputStream.java:146<span class="o">)</span> ~<span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'>        at com.google.common.io.Files.newReader<span class="o">(</span>Files.java:86<span class="o">)</span> ~<span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at su.g<span class="o">(</span>SourceFile:124<span class="o">)</span> ~<span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at po.z<span class="o">(</span>SourceFile:99<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at po.&lt;init&gt;<span class="o">(</span>SourceFile:25<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at pp.i<span class="o">(</span>SourceFile:172<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at net.minecraft.server.MinecraftServer.run<span class="o">(</span>SourceFile:418<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at java.lang.Thread.run<span class="o">(</span>Thread.java:745<span class="o">)</span> <span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/WARN<span class="o">]</span>: Failed to load ip banlist:
</span><span class='line'>java.io.FileNotFoundException: banned-ips.json <span class="o">(</span>No such file or directory<span class="o">)</span>
</span><span class='line'>        at java.io.FileInputStream.open<span class="o">(</span>Native Method<span class="o">)</span> ~<span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'>        at java.io.FileInputStream.&lt;init&gt;<span class="o">(</span>FileInputStream.java:146<span class="o">)</span> ~<span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'>        at com.google.common.io.Files.newReader<span class="o">(</span>Files.java:86<span class="o">)</span> ~<span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at su.g<span class="o">(</span>SourceFile:124<span class="o">)</span> ~<span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at po.y<span class="o">(</span>SourceFile:91<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at po.&lt;init&gt;<span class="o">(</span>SourceFile:27<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at pp.i<span class="o">(</span>SourceFile:172<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at net.minecraft.server.MinecraftServer.run<span class="o">(</span>SourceFile:418<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at java.lang.Thread.run<span class="o">(</span>Thread.java:745<span class="o">)</span> <span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/WARN<span class="o">]</span>: Failed to load operators list:
</span><span class='line'>java.io.FileNotFoundException: ops.json <span class="o">(</span>No such file or directory<span class="o">)</span>
</span><span class='line'>        at java.io.FileInputStream.open<span class="o">(</span>Native Method<span class="o">)</span> ~<span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'>        at java.io.FileInputStream.&lt;init&gt;<span class="o">(</span>FileInputStream.java:146<span class="o">)</span> ~<span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'>        at com.google.common.io.Files.newReader<span class="o">(</span>Files.java:86<span class="o">)</span> ~<span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at su.g<span class="o">(</span>SourceFile:124<span class="o">)</span> ~<span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at po.A<span class="o">(</span>SourceFile:107<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at po.&lt;init&gt;<span class="o">(</span>SourceFile:29<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at pp.i<span class="o">(</span>SourceFile:172<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at net.minecraft.server.MinecraftServer.run<span class="o">(</span>SourceFile:418<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at java.lang.Thread.run<span class="o">(</span>Thread.java:745<span class="o">)</span> <span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/WARN<span class="o">]</span>: Failed to load white-list:
</span><span class='line'>java.io.FileNotFoundException: whitelist.json <span class="o">(</span>No such file or directory<span class="o">)</span>
</span><span class='line'>        at java.io.FileInputStream.open<span class="o">(</span>Native Method<span class="o">)</span> ~<span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'>        at java.io.FileInputStream.&lt;init&gt;<span class="o">(</span>FileInputStream.java:146<span class="o">)</span> ~<span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'>        at com.google.common.io.Files.newReader<span class="o">(</span>Files.java:86<span class="o">)</span> ~<span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at su.g<span class="o">(</span>SourceFile:124<span class="o">)</span> ~<span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at po.C<span class="o">(</span>SourceFile:123<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at po.&lt;init&gt;<span class="o">(</span>SourceFile:30<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at pp.i<span class="o">(</span>SourceFile:172<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at net.minecraft.server.MinecraftServer.run<span class="o">(</span>SourceFile:418<span class="o">)</span> <span class="o">[</span>minecraft_server.jar:?<span class="o">]</span>
</span><span class='line'>        at java.lang.Thread.run<span class="o">(</span>Thread.java:745<span class="o">)</span> <span class="o">[</span>?:1.7.0_71<span class="o">]</span>
</span><span class='line'><span class="o">[</span>05:55:11<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing level <span class="s2">&quot;world&quot;</span>
</span><span class='line'><span class="o">[</span>05:55:12<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing start region <span class="k">for </span>level 0
</span><span class='line'><span class="o">[</span>05:55:13<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing spawn area: 7%
</span><span class='line'><span class="o">[</span>05:55:14<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing spawn area: 14%
</span><span class='line'><span class="o">[</span>05:55:15<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing spawn area: 27%
</span><span class='line'><span class="o">[</span>05:55:16<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing spawn area: 43%
</span><span class='line'><span class="o">[</span>05:55:17<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing spawn area: 59%
</span><span class='line'><span class="o">[</span>05:55:18<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing spawn area: 74%
</span><span class='line'><span class="o">[</span>05:55:19<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Preparing spawn area: 88%
</span><span class='line'><span class="o">[</span>05:55:19<span class="o">]</span> <span class="o">[</span>Server thread/INFO<span class="o">]</span>: Done <span class="o">(</span>8.267s<span class="o">)</span>! For <span class="nb">help</span>, <span class="nb">type</span> <span class="s2">&quot;help&quot;</span> or <span class="s2">&quot;?&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>In your minecraft client, add the IP of your new host and connect to it.</li>
</ul>


<p>Hurray! You Minecraft sever works. It&rsquo;ll run until you hit Ctrl-C or close your window. I&rsquo;ll go on to making this more rubust in the next installment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ec2 Classiclink and Elbs]]></title>
    <link href="http://site.toger.us/blog/2015/01/09/ec2-classiclink-and-elbs/"/>
    <updated>2015-01-09T00:00:00-08:00</updated>
    <id>http://site.toger.us/blog/2015/01/09/ec2-classiclink-and-elbs</id>
    <content type="html"><![CDATA[<p>&mdash;assiclink-and-elbs.markdown
layout: post
title: &ldquo;EC2 ClassicLink and ELBs&rdquo;
date: 2015-01-09 16:08:02 -0800
comments: true</p>

<h2>categories:  AWS VPC</h2>

<p>I was looking at <a href="https://aws.amazon.com/blogs/aws/classiclink-private-communication-between-classic-ec2-instances-vpc-resources/">EC2 ClassicLink</a> today. It is going to make VPC migrations much easier.  Some things I noticed:</p>

<ul>
<li>Connectivity to external-facing ELBs only works if the ELBs have &lsquo;world&rsquo; incoming access, or specifically mention the public IPs of the source. That is because the ELB IP resolves to its public IP.</li>
<li>Connectivity to internal-facing ELBs work fine, assuming the source security group has access.</li>
<li>My default-VPC IP space overlapped with my EC2 Classic node&rsquo;s DNS resolver in /etc/resolv.conf, so attaching it to the VPC broke DNS. <em>Update 1/25/15</em>: I retested this and it is working now, so I&rsquo;m not sure that this is a problem anymore.</li>
<li>The ReInvent session says that instance-DNS won&rsquo;t resolve, so you won&rsquo;t be able to use ec2-* domain names to reach specific instances &mdash; it&rsquo;ll have to be IPs.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PaperTrailApp and RouterBOARD 750GL]]></title>
    <link href="http://site.toger.us/blog/2015/01/07/papertrailapp-and-routerboard/"/>
    <updated>2015-01-07T20:07:02-08:00</updated>
    <id>http://site.toger.us/blog/2015/01/07/papertrailapp-and-routerboard</id>
    <content type="html"><![CDATA[<p><a href="https://papertrailapp.com/?thank=ee28e2">PaperTrailApp</a> (Referral link) is a SaaS RSyslog host that currently offers 100MB/mo of capacity free.  In setting up my home network and servers I wanted to have my RouterBOARD 750GL send its logs to PaperTrail.  The RouterBoard supports syslog, so configuring it is pretty straightforward &mdash; with one exception. My ISP utilizes PPPoE and so I have an additional interface configured in my RouterBOARD for it.  It seems to get confused as to what source IP to use when talking to PaperTrail and the syslog packets go into the bitbucket.  I resolved this by hardcoding my source IP into the src-address for the syslog.  The resulting configuation is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># jan/07/2015 20:12:24 by RouterOS 6.22
</span><span class='line'># software id = 2JL8-DKGT
</span><span class='line'>#
</span><span class='line'>/system logging action
</span><span class='line'>set 3 remote=&lt;IP by resolving your log*.papertailapp.com address&gt; remote-port=&lt;port defined in the console&gt;
</span><span class='line'>add bsd-syslog=yes name=papertrail remote==&lt;IP by resolving your log*.papertailapp.com address&gt; remote-port=&lt;port defined in papertrail console&gt; src-address=&lt;pppoe address&gt; target=remote
</span><span class='line'>/system logging
</span><span class='line'>add action=papertrail topics=!async,!packet,!ddns,!debug</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mesos, Docker and Consul]]></title>
    <link href="http://site.toger.us/blog/2015/01/07/mesos/"/>
    <updated>2015-01-07T19:55:10-08:00</updated>
    <id>http://site.toger.us/blog/2015/01/07/mesos</id>
    <content type="html"><![CDATA[<p>I was playing with Mesos/Marathon + Docker recently and tried to integrate Consul.  Mesos sets the Docker container &lsquo;name&rsquo; to a internal value that messes with the Consul <a href="https://github.com/progrium/registrator">Registrator</a>, something like <code>mesos-aa998abcabab</code>. Registrator can accept an environmental variable telling it what service name to register as instead. The format for that is:</p>

<div><script src='https://gist.github.com/12209f78a592eaf98cfd.js'></script>
<noscript><pre><code>curl -v -X POST http://localhost:8080/v2/apps \
  -H Content-Type:application/json -d &#39;{
    &quot;id&quot;: &quot;some-nginx&quot;,
      &quot;container&quot;: {
        &quot;docker&quot;: {
          &quot;parameters&quot; : {
            &quot;env&quot;: &quot;SERVICE_NAME=nginx-xyz&quot;
          },
        &quot;image&quot;: &quot;nginx&quot;,
        &quot;network&quot;: &quot;BRIDGE&quot;,
        &quot;portMappings&quot;: [
          { &quot;containerPort&quot;: 80, &quot;hostPort&quot;: 0, &quot;protocol&quot;: &quot;tcp&quot; }
        ]
      },
      &quot;type&quot;: &quot;DOCKER&quot;,
      &quot;volumes&quot;: []
      },
    &quot;cpus&quot;: 0.2,
    &quot;mem&quot;: 128.0,
    &quot;instances&quot;: 1
  }&#39; </code></pre></noscript></div>


<p>Registrator will register the instance with a service name of <code>nginx-xyz</code></p>
]]></content>
  </entry>
  
</feed>
